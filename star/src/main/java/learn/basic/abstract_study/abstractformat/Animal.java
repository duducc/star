package learn.basic.abstract_study.abstractformat;

/**
 * 抽象方法：
 *    就是加上abstract关键字，然后去掉大括号，直接分号结束。
 * 抽象类：
 *    抽象方法所在的类，必须是抽象类才行。
 *                           那怎么定义一个抽象类， 在class之前写上abstract即可。
 *
 *  如何使用抽象类和抽象方法：
 *  1.不能直接创建new抽象类对象。  //比方说动物 这是一个抽象的概念吧  动物多了去了 每种动物都不一样  那给你说给我创建一个动物你怎么创建 你要么创建一只狗 要么创建一只猫  总是
 *                                //有一个具体的存在 但抽象是不能单独存在的  你随便找一个动物 准时具体的  要么是狗 要么是猫  要么是大象  肯定的是具体的 所以不能直接new抽象类对象
 *  2.必须用一个子类继承抽象父类（如何使用）
 *
 *  3.子类必须覆盖重写抽象父类当中所有的抽象方法。
 *     覆盖重写（实现）：子类去掉抽象方法的abstract关键字，然后补上方法体大括号。
 *
 *  4. 创建子类对象进行使用。
 *
 *
 */
public abstract class Animal {

    //作为一个动物能不能吃东西呢 当然可以

    //public  void  eat(){ //但是这个大括号当中  你觉得我应该写什么呢

        //是
        //System.out.println("吃鱼");
        //还是
        //System.out.println("吃骨头");
        //发现写谁都不合适   那你说有写动物它不吃鱼呀   有些动物它不吃骨头呀  那你说这个大括号到底写什么  咱们就犯难了  依据前面的举例   所以我们就将这个方法定义为抽象方法

    //}

    //这就是一个抽象方法,代表吃东西，但是具体吃什么(大括号的内容)不确定。  这就是抽象方法的定义
    public abstract void eat();

    //能不能再定义一些普通的方法呢  当然可以
    //这是普通的成员方法  该怎么定义 还怎么定义 跟之前不一样的呢就是抽象方法 没有大括号方法体 抽象方法所在的类必须是抽象类 那抽象类也很简单  加上abstract就可以了
    public void normalMethod(){

    }
}
