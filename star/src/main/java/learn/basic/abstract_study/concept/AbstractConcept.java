package learn.basic.abstract_study.concept;

/**
 * 抽象的概念：
 *  什么叫做抽象
 *   1.  比方说 我现在已经有了一个继承关系  在上面有一个方框叫做图形(这里的图形所说的是二维平面的) 我把它当作是一个父类
 *                                    //那底下呢 我在画几个图形 有一个正方形 ，一个三角形 ，一个圆形
 *                                    //这些都属于是图形对吗  对  下面的我叫子类 上面我叫父类
 *                                    //那我们说子类就是一个父类 请问正方形是不是图形 肯定是啊
 *                                                                 三角形是不是图形  也是
 *                                                                 圆形是不是图形     那也是啊
 *                                    //子类就是一个父类所以是继承关系  这个没有问题
 *                                    //但是我父类当中要是想定义一个方法 叫做计算面积的方法  那你说这个方法我要是写上之后应该怎么实现
 *                                    //你现在正方形 三角形  圆形面积都会算 我现在给你换一个问法  请问图形怎么计算面积
 *                                    //没法说对吗 你说不清楚  为什么  你问的太抽象了  不够具体呀  说图形 图形可多了去了
 *                                    //不一样的图形它计算方式是不一样的 所以说上面(就是图形)的方法 我没法说怎么算  这就是一个抽象方法
 *                                    //你说平面的图形啊  能不能计算面积  当然可以只要是平面二维图形它都有面积 对吗  所以说这个方法是一定要有的  一定是可以计算面积
 *                                    //但是具体怎么计算  没法说 不够具体  你这个太抽象了  抽象跟具体是反义词
 *                                    //你得给我具体到一个正方形  那我就会算 具体到一个三角形 那我也会  具体到一个圆形也能算  但是你现在说得是图形 不具体 这是一个抽象的概念
 *                                    //能算 但是到底怎么算  不是很清楚 这样的方法应该有 但是方法体里面用那种公式不明确  应该就是抽象方法
 *
 *   2. 比方说 上面是父类  我叫做动物（用一个小方格表示） 不管是什么动物 天上飞的  水里游的  地上跑的 全都算  那动物能不能吃东西 肯定能
 *                                   //在动物(父类)当中有一个吃东西的方法 只要你是动物肯定得有这个方法  不吃东西没法活着呀
 *                                   //那我们来看动物都分哪些种  我也不多分   在下面画两个方框表示两个子类
 *                                   //分别是 汪星人     喵星人  狗是不是一个动物  可以啊  狗就是一个动物   所以继承了   那猫是不是一个动物 也可以啊
 *                                   //那这个猫能不能吃东西 能吃  但是猫吃什么呢    猫吃鱼
 *                                   //那狗吃什么呢  狗吃骨头
 *                                   //那往上看 动物吃什么 你能回答吗 你能说吗  没法说   那在这里没法说 抽象方法  呀 你问的这到底是什么动物你都没告诉我 太抽象了
 *                                   //你要是说猫 我知道吃鱼  你要是说狗我知道吃骨头  你说是动物 那这就抽象了 不够具体呀  所以说动物它确实可以吃东西
 *                                   //但是它到底吃啥 我可是没法说的  这就是抽象的概念
 *
 *                         在这里给你说一句话：
 *                                    如果父类当中的方法不确定如何进行{}方法体实现，那么这就应该是一个抽象方法。
 *
 *                                    //比方说 图形   有同学说  你就压根把这个 图形计算面积 给它放到下面那三个里  不就得了吗  那等于说图形就不能计算面积
 *                                    //是这样吗 不是  图形一定能计算面积  动物一定能吃东西  但是具体的方式不确定 那这样的方法就叫做抽象方法
 */
public class AbstractConcept {

}
